[{"C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\main.ts":"1","C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\App.vue":"2","C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\components\\BabylonExamples.vue":"3","C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\BabylonExamples\\StandardMaterials.ts":"4","C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\BabylonExamples\\PBR.ts":"5","C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\BabylonExamples\\Models.ts":"6"},{"size":90,"mtime":1724015066318,"results":"7","hashOfConfig":"8"},{"size":537,"mtime":1724634742583,"results":"9","hashOfConfig":"8"},{"size":531,"mtime":1724895110380,"results":"10","hashOfConfig":"8"},{"size":4024,"mtime":1724519965479,"results":"11","hashOfConfig":"8"},{"size":4442,"mtime":1724802322753,"results":"12","hashOfConfig":"8"},{"size":3532,"mtime":1724971918373,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1s1dax7",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\main.ts",[],[],"C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\App.vue",[],[],"C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\components\\BabylonExamples.vue",["31"],"C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\BabylonExamples\\StandardMaterials.ts",["32"],"import {Scene, Engine, FreeCamera, Vector3, HemisphericLight, MeshBuilder, StandardMaterial, Texture, Color3} from \"@babylonjs/core\"\r\n\r\nexport class StandardMaterials {\r\n\r\n    scene: Scene\r\n    engine: Engine\r\n\r\n    constructor( private canvas:HTMLCanvasElement){\r\n        this.engine =new Engine(this.canvas, true)\r\n        this.scene = this.CreateScene()\r\n        this.engine.runRenderLoop(()=>{\r\n            this.scene.render()\r\n        })\r\n    }\r\n\r\n\r\n\r\n    CreateScene():Scene {\r\n        const scene = new Scene(this.engine)\r\n        const camera = new FreeCamera(\"camera\", new Vector3(0,1,0),this.scene)\r\n        camera.attachControl();\r\n        camera.speed = .30\r\n\r\n        camera.position.z = 0\r\n\r\n        const light = new HemisphericLight(\"hemiLight\",new Vector3(0,1,0), this.scene)\r\n\r\n        light.intensity = 1\r\n\r\n        const ground = MeshBuilder.CreateGround(\"Ground\", {width:15, height:15}, this.scene)\r\n\r\n        ground.position.z =5\r\n\r\n        const ball = MeshBuilder.CreateSphere(\"ball\", {diameter:2}, this.scene)\r\n        const ball2 = MeshBuilder.CreateSphere(\"ball\", {diameter:2}, this.scene)\r\n        ball.position.z = 8\r\n        ball2.position.z = ball.position.z \r\n        ball.position.y = 1\r\n        ball2.position.y =ball.position.y\r\n        ball2.position.x= ball.position.x+1.5\r\n\r\n\r\n        ground.material = this.CreateGroundMaterial()\r\n        ball.material = this.CreateBallMaterial()\r\n        ball2.material = this.CreateBallMaterial()\r\n\r\n        return scene\r\n    }\r\n\r\n    CreateGroundMaterial():StandardMaterial{\r\n        const groundMat = new StandardMaterial(\"GroundMat\", this.scene)\r\n\r\n        const uvScale = 3.75\r\n\r\n        \r\n\r\n        const texArray: Texture[] = []\r\n        \r\n\r\n        const diffuseTex = new Texture(\"./Textures/CobbleStone/patterned_cobblestone_02_diff_1k.jpg\", this.scene)\r\n\r\n        \r\n        \r\n\r\n        groundMat.diffuseTexture = diffuseTex\r\n        \r\n        texArray.push(diffuseTex)\r\n\r\n        const normalTex = new Texture(\"./Textures/CobbleStone/patterned_cobblestone_02_nor_gl_1k.jpg\", this.scene)\r\n\r\n        groundMat.bumpTexture = normalTex\r\n\r\n        texArray.push(normalTex)\r\n\r\n\r\n        // const aoTex = new Texture(\"./Textures/CobbleStone/patterned_cobblestone_02_ao_1k.jpg\", this.scene)\r\n        // groundMat.ambientTexture = aoTex\r\n        // texArray.push(aoTex)\r\n\r\n        const dispTex = new Texture(\"./Textures/CobbleStone/patterned_cobblestone_02_disp_1k.jpg\", this.scene)\r\n        \r\n        groundMat.specularTexture = dispTex\r\n\r\n        texArray.push(dispTex)\r\n\r\n        texArray.forEach((tex)=>{\r\n            tex.uScale = uvScale\r\n            tex.vScale = uvScale\r\n            \r\n        })\r\n\r\n        return groundMat\r\n    }\r\n\r\n    CreateBallMaterial():StandardMaterial{\r\n        const BallMat = new StandardMaterial(\"BallMat\", this.scene)\r\n\r\n       \r\n        \r\n\r\n        \r\n        \r\n\r\n        const uvScale = .5       \r\n\r\n        const texArray: Texture[] = []\r\n        \r\n\r\n        const diffuseTex = new Texture(\r\n            \"./Textures/Metal plate/metal_plate_diff_1k.jpg\"\r\n        )\r\n        \r\n        \r\n\r\n        BallMat.diffuseTexture = diffuseTex\r\n        \r\n        texArray.push(diffuseTex)\r\n\r\n        const normalTex = new Texture(\"./Textures/Metal plate/metal_plate_nor_gl_1k.jpg\", this.scene)\r\n\r\n        BallMat.bumpTexture = normalTex\r\n        BallMat.invertNormalMapX = true\r\n        BallMat.invertNormalMapY = true\r\n        texArray.push(normalTex)\r\n\r\n\r\n        const aoTex = new Texture(\"./Textures/Metal plate/metal_plate_ao_1k.jpg\", this.scene)\r\n        BallMat.ambientTexture = aoTex\r\n        texArray.push(aoTex)\r\n\r\n        const specTex = new Texture(\"./Textures/Metal plate/metal_plate_spec_1k.jpg\", this.scene)\r\n        \r\n        BallMat.specularTexture = specTex\r\n        BallMat.specularPower = 90\r\n        texArray.push(specTex)\r\n\r\n        texArray.forEach((tex)=>{\r\n            tex.uScale = uvScale\r\n            tex.vScale = uvScale\r\n            \r\n        })\r\n\r\n\r\n        return BallMat\r\n        \r\n    }\r\n\r\n}",[],"C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\BabylonExamples\\PBR.ts",["33"],"import {Scene, Engine, FreeCamera, Vector3, HemisphericLight, MeshBuilder, StandardMaterial, Texture, CubeTexture, PBRMaterial} from \"@babylonjs/core\"\r\n\r\nexport class PBR {\r\n\r\n    scene: Scene\r\n    engine: Engine\r\n\r\n    constructor( private canvas:HTMLCanvasElement){\r\n        this.engine =new Engine(this.canvas, true)\r\n        this.scene = this.CreateScene()\r\n        this.engine.runRenderLoop(()=>{\r\n            this.scene.render()\r\n        })\r\n    }\r\n\r\n\r\n\r\n    CreateScene():Scene {\r\n        const scene = new Scene(this.engine)\r\n        const camera = new FreeCamera(\"camera\", new Vector3(0,1,0),this.scene)\r\n        camera.attachControl();\r\n        camera.speed = .30\r\n\r\n        camera.position.z = 0\r\n\r\n        // const light = new HemisphericLight(\"hemiLight\",new Vector3(0,1,0), this.scene)\r\n\r\n        // light.intensity = 0\r\n\r\n        const envTex = CubeTexture.CreateFromPrefilteredData('./PBR/SKy.env',scene)\r\n\r\n        scene.environmentTexture = envTex\r\n\r\n        scene.createDefaultSkybox(envTex, true)\r\n\r\n        scene.environmentIntensity = 2\r\n\r\n        const ground = MeshBuilder.CreateGround(\"Ground\", {width:15, height:15}, this.scene)\r\n\r\n        ground.position.z =5\r\n\r\n        \r\n\r\n        const ball = MeshBuilder.CreateSphere(\"ball\", {diameter:2}, this.scene)\r\n        const ball2 = MeshBuilder.CreateSphere(\"ball\", {diameter:2}, this.scene)\r\n        ball.position.z = 8\r\n        ball2.position.z = ball.position.z \r\n        ball.position.y = 1\r\n        ball2.position.y =ball.position.y\r\n        ball2.position.x= ball.position.x+1.5\r\n\r\n\r\n        ground.material = this.CreateAsphalt()\r\n        ball.material = this.CreateBallMaterial()\r\n        ball2.material = this.CreateBallMaterial()\r\n\r\n        return scene\r\n    }\r\n\r\n    CreateGroundMaterial():StandardMaterial{\r\n        const groundMat = new StandardMaterial(\"GroundMat\", this.scene)\r\n\r\n        const uvScale = 3.75\r\n\r\n        \r\n\r\n        const texArray: Texture[] = []\r\n        \r\n\r\n        const diffuseTex = new Texture(\"./Textures/CobbleStone/patterned_cobblestone_02_diff_1k.jpg\", this.scene)\r\n\r\n        \r\n        \r\n\r\n        groundMat.diffuseTexture = diffuseTex\r\n        \r\n        texArray.push(diffuseTex)\r\n\r\n        const normalTex = new Texture(\"./Textures/CobbleStone/patterned_cobblestone_02_nor_gl_1k.jpg\", this.scene)\r\n\r\n        groundMat.bumpTexture = normalTex\r\n\r\n        texArray.push(normalTex)\r\n\r\n\r\n        // const aoTex = new Texture(\"./Textures/CobbleStone/patterned_cobblestone_02_ao_1k.jpg\", this.scene)\r\n        // groundMat.ambientTexture = aoTex\r\n        // texArray.push(aoTex)\r\n\r\n        const dispTex = new Texture(\"./Textures/CobbleStone/patterned_cobblestone_02_disp_1k.jpg\", this.scene)\r\n        \r\n        groundMat.specularTexture = dispTex\r\n\r\n        texArray.push(dispTex)\r\n\r\n        texArray.forEach((tex)=>{\r\n            tex.uScale = uvScale\r\n            tex.vScale = uvScale\r\n            \r\n        })\r\n\r\n        return groundMat\r\n    }\r\n\r\n    CreateBallMaterial():PBRMaterial{\r\n        const pbr = new PBRMaterial(\"pbr\",this.scene)\r\n\r\n        pbr.albedoTexture = new Texture(\"./Textures/Metal plate/metal_plate_diff_1k.jpg\",this.scene)\r\n\r\n        pbr.bumpTexture = new Texture(\"./Textures/Metal plate/metal_plate_nor_gl_1k.jpg\", this.scene)\r\n\r\n        pbr.invertNormalMapX = true\r\n        pbr.invertNormalMapY = true\r\n\r\n        pbr.useAmbientOcclusionFromMetallicTextureRed = true\r\n        pbr.useRoughnessFromMetallicTextureGreen = true\r\n        pbr.useMetallnessFromMetallicTextureBlue = true\r\n\r\n\r\n        pbr.metallicTexture = new Texture(\"./Textures/Metal plate/metal_plate_arm_1k.jpg\", this.scene)\r\n\r\n\r\n        return pbr \r\n        \r\n    }\r\n\r\n    CreateAsphalt(): PBRMaterial{\r\n        const pbr = new PBRMaterial('pbr', this.scene)\r\n\r\n        pbr.albedoTexture = new Texture(\"./Textures/asphalt_02_1k.blend/textures/asphalt_02_diff_1k.jpg\",this.scene)     \r\n        \r\n        pbr.bumpTexture = new Texture(\"./Textures/asphalt_02_1k.blend/textures/asphalt_02_nor_gl_1k.jpg\",this.scene)\r\n\r\n        pbr.invertNormalMapX = true\r\n        pbr.invertNormalMapY = true\r\n\r\n\r\n        pbr.useAmbientOcclusionFromMetallicTextureRed = true\r\n\r\n        pbr.useRoughnessFromMetallicTextureGreen = true\r\n\r\n        pbr.useMetallnessFromMetallicTextureBlue = true\r\n\r\n        pbr.metallicTexture = new Texture(\"./Textures/asphalt_02_1k.blend/textures/asphalt_02_arm_1k.jpg\",this.scene)\r\n\r\n        \r\n\r\n       \r\n        return pbr\r\n    }\r\n}","C:\\another\\extra\\Coding\\Uber_code 1\\Code\\babylon\\src\\BabylonExamples\\Models.ts",["34","35"],{"ruleId":"36","severity":1,"message":"37","line":15,"column":20,"nodeType":"38","messageId":"39","endLine":15,"endColumn":53},{"ruleId":"40","severity":1,"message":"41","line":1,"column":103,"nodeType":"42","messageId":"43","endLine":1,"endColumn":109},{"ruleId":"40","severity":1,"message":"44","line":1,"column":45,"nodeType":"42","messageId":"43","endLine":1,"endColumn":61},{"ruleId":"40","severity":1,"message":"44","line":1,"column":45,"nodeType":"42","messageId":"43","endLine":1,"endColumn":61},{"ruleId":"40","severity":1,"message":"45","line":1,"column":129,"nodeType":"42","messageId":"43","endLine":1,"endColumn":140},"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","@typescript-eslint/no-unused-vars","'Color3' is defined but never used.","Identifier","unusedVar","'HemisphericLight' is defined but never used.","'SceneLoader' is defined but never used."]